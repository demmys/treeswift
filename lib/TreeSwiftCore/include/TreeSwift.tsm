infix operator % {
    associativity left
    precedence 150
}

infix operator * {
    associativity left
    precedence 150
}

infix operator / {
    associativity left
    precedence 150
}

infix operator + {
    associativity left
    precedence 140
}

infix operator - {
    associativity left
    precedence 140
}

infix operator == {
    associativity none
    precedence 130
}

infix operator != {
    associativity none
    precedence 130
}

infix operator < {
    associativity none
    precedence 130
}

infix operator <= {
    associativity none
    precedence 130
}

infix operator >= {
    associativity none
    precedence 130
}

infix operator > {
    associativity none
    precedence 130
}

public struct Bool {
    public init(_builtinBooleanLiteral value: Builtin.Int1)
}

public struct Int {
    public init (_builtinIntegerLiteral value: Builtin.Int64)
}

// Equatable
public func ==(lhs: Int, rhs: Int) -> Bool
public func !=(lhs: Int, rhs: Int) -> Bool
// Comparable
public func <(lhs: Int, rhs: Int) -> Bool
public func <=(lhs: Int, rhs: Int) -> Bool
public func >=(lhs: Int, rhs: Int) -> Bool
public func >(lhs: Int, rhs: Int) -> Bool
// IntegerArithmeticType
public func +(lhs: Int, rhs: Int) -> Int
public func -(lhs: Int, rhs: Int) -> Int
public func *(lhs: Int, rhs: Int) -> Int
public func /(lhs: Int, rhs: Int) -> Int
public func %(lhs: Int, rhs: Int) -> Int

public func print(item: Int)
